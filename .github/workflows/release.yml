name: Lint & test & build & publish Docker image

on:
  workflow_dispatch:
  release:
    types: [prereleased, released]

jobs:
  lint-test:
    name: Lint & test
    permissions:
      contents: read
    uses: ./.github/workflows/lint-test.yml

  build-jetbrains:
    name: Build for JetBrains
    permissions:
      contents: read
      actions: write
    needs: lint-test
    uses: ./.github/workflows/build.yml
    with:
      platform: "jetbrains"

  attach-release-jetbrains-asset:
    name: Attach release JetBrains asset
    permissions:
      contents: write
      actions: read
    needs: build-jetbrains
    uses: ./.github/workflows/release-asset.yml
    with:
      artifact-name: ${{ needs.build-jetbrains.outputs.artifact-name }}

  build-vs:
    name: Build for Visual Studio
    permissions:
      contents: read
      actions: write
    needs: lint-test
    uses: ./.github/workflows/build.yml
    with:
      platform: "vs"

  attach-release-vs-asset:
    name: Attach release Visual Studio asset
    permissions:
      contents: write
      actions: read
    needs: build-vs
    uses: ./.github/workflows/release-asset.yml
    with:
      artifact-name: ${{ needs.build-vs.outputs.artifact-name }}

  build-web:
    name: Build for web
    permissions:
      contents: read
      actions: write
    needs: lint-test
    uses: ./.github/workflows/build.yml
    with:
      platform: "web"

  attach-release-web-asset:
    name: Attach release web asset
    permissions:
      contents: write
      actions: read
    needs: build-web
    uses: ./.github/workflows/release-asset.yml
    with:
      artifact-name: ${{ needs.build-web.outputs.artifact-name }}

  build-push-docker-image:
    name: Build & push Docker image
    permissions:
      contents: read
      actions: write
    needs: [build-jetbrains, "build-vs", build-web]
    uses: ./.github/workflows/docker-image.yml
    secrets: inherit
    with:
      dist-artifact-name: ${{ needs.build-web.outputs.artifact-name }}
      push: true

  update-digma:
    name: Update UI releases in digma
    permissions:
      contents: read
      actions: write
    needs:
      [
        attach-release-jetbrains-asset,
        attach-release-vs-asset,
        attach-release-web-asset,
        build-push-docker-image
      ]
    runs-on: ubuntu-latest
    if: github.event.release.prerelease == false
    steps:
      - uses: actions/checkout@v4
      - name: Get version and dependencies
        run: |
          DEPENDENCIES=$(cat dependencies.json | jq -c '.')
          echo "DEPENDENCIES=$DEPENDENCIES" >> $GITHUB_ENV
          echo "RELEASE=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV

      - name: Dispatch event in digma
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CONTENTS_WRITE_PAT }}
          repository: digma-ai/digma
          event-type: update-ui
          client-payload: |-
            {
              "release": "${{ env.RELEASE }}",
              "dependencies": ${{ env.DEPENDENCIES }}
            }
